--- CSS inline ---
    Significa inserir um estilo diretamente na criação do elemento HTML. Ex:
    <body style="background: black">
        <div style="font-size: 50px; color: green"></div>
    </body>


--- CSS incorporado ---
    Significa criar o estilo no mesmo arquivo HTML, dentro da tag <head>. Ex:
    <head>
        ...
        <style>
            body {
                background: black;
            }
            h1 {
                font-size: 50px;
            }
        </style>
    </head>


--- CSS Externo ---
    Significa criar um ou mais arquivos CSS e invocá-los no <head>. Ex:
    <head>
        <link rel="stylesheet" href="arquivo.css">
        <link rel="stylesheet" href="arquivo2.css">
    </head>


--- Seletor por Classes ---
    É uma série de tags especificadas por um título que representa uma classe
    É declarada dentro da tag de abertura
    É referenciada por .{nome_da_classe} no CSS.
    Ex.:
    (HTML)
    <p class="paragrafos">Lorem1</p>
    <p class="paragrafos">Lorem2</p>
    <p class="paragrafos">Lorem3</p>

    (CSS)
    .paragrafos{}


--- Comentários ---
    /**/


--- Seletor por Identificadores (id)
    Não pode haver mais de um elemento com um mesmo id
    É um tag com comportamento específico representado por um id
    É declarado dentro da tag de abertura
    É referenciado por #{id} no CSS.
    Ex.:
    (HTML)
    <p id="paragrafo_principal">Lorem1</p>

    (CSS)
    #paragrafos{}


--- Seletor Universal ---
    Todas as tags receberão essa propriedade
    É referenciado por * no CSS
    Ex.:
    (CSS)
    *{}


--- Agrupamento de Seletores ---
    Para diferentes elementos que receberão a mesma propriedade CSS
    Significa que posso declarar uma única vez no CSS.
    Ex.:
    (CSS)
    h1, p, footer{
        text-allign: center;
    }


--- background ---
    Exemplos na aula 06

    background-image: url("");


--- border ---
    Bordas de um elemento
    Exemplos na aula 07

    (geral)
    border: 5px solid black;
    border: 5px dotted;
    border: 5px dashed;
    border: 5px double;
    border: 5px groove;
    border: 5px ridge;
    border: 5px inset;
    border: 5px outset;
    border: 5px hidden;

    (individual)
    border-left: 5px solid black;
    border-right: 5px dotted;
    border-top: 5px dashed;
    border-bottom: 5px double;

    (arredondar)
    border-radius: 30px;
    border-radius: 5%;

    background: black;


--- margin ---
    Espaçamento entre elementos e cantos
    Exemplos na aula 08

    margin-top: 25%
    margin-right: 50px
    margin-bottom: 10px
    margin-left: 5%

    OU

    ^ > v <
    margin: 25%, 50px, 10px, 5%;


--- padding ---
    É um espaçamento dentro do próprio elemento
    Muito usado em botões
    Exemplos na aula 09
    
    padding-top: 25%
    padding-right: 50px
    padding-bottom: 10px
    padding-left: 5%

    OU

    ^ > v <
    padding: 25%, 50px, 10px, 5%;


--- Width (largura) e height (altura) ---
    É o tamanho de um elemento
    O que está dentro irá se adaptar ao tamanho

    width: 100px;
    height: 10%;
    max-width: 800px; - para elementos mais responsivos, adequando ao tamanho da tela
    max-height: 50%;


--- Propriedade Text --- 
    text-allign: center | left | right | justify
    text-allign: 

    direction: rtl  | ltr - ordem do texto

    text-decoration: none;
    text-decoration: overline; - "sobrelinhado"
    text-decoration: underline;
    text-decoration: line-trough; - riscado

    text-transform: uppercase;
    text-transform: lowercase;
    text-transform: capitalize;

    text-ident: 60px; espaçamento no início do parágrafo

    letter-spacing: 5px; espaçamento entre letras
    letter-spacing: -5px; juntar o texto num só
    word-spacing: 5px;
    line-height: 0.8; espaçamento entrelinhas


--- Fontes ---
    Google fonts para procurar fontes gratuitas
    font-family
    font-size
    font-style
    font-weight: bold - negrito


--- Display ---
    Títulos, divs, parágrafos e outros são elementos naturalmente display block, ou seja, vão até o final da página, mesmo que não necessite.
    É possível alterar isso a partir da tag display
    Exemplo na aula 14

    display: block
    display: inline // não obedece width e height
    display: inline-block // obedece
    display: none || "retira" do HTML
                  || também posso fazer visibility: hidden  para apenas ocultar da página


--- max-width ---
    Faz com que os elementos tenham um tamanho máximo independente do tamanho da página, deixando mais organizado

    max-width: % | px


--- position ---
    Para posicionar um elemento dentro de outro

    static
        É o default
    
    relative - 
        Para indicar a posição do elemento
        É referente a posição original dele
        
        top | right ... - para posicionar
        z-index - para fazer camadas de profundidade | quais elementos ficam mais acima (mais visiveis)

    absolute
        A localização é dada em relação ao elemento pai
        Considera como elemento pai o primeiro que tiver position diferente de static
        top | right ...
    
    sticky
        Fica fixo durante a rolagem, dentro do seu elemento pai

    fixed
        Para que o elemento fique sempre parado, independente de rolagem
        top | right ... - para posicionar
    

--- overflow ---
    Situações em que o conteúdo de um elemento excede o tamanho do elemento
    Não tem necessidade de usar overflow caso não tenha definido uma altura (height)
    Isso porque o elemento irá adaptar o tamanho de acordo com o seu conteúdo

    visible
        Significa que será mostrado, mesmo que "estoure" o tamanho do elemento

    hidden
        Significa que será mostrado somente o que coube no elemento 

    scroll
        Sempre coloca barras de rolagem para ver todo o conteúdo

    auto
        Coloca barras de rolagem somente quando necessário

    Para configurar overflow somente para o eixo X ou Y:
        overflow-y
        overflow-x


--- float ---
    Para deixar um elemento flutuando em algum ponto e outro elemento ao seu lado
    
    Para "se livrar" de uma flutuação, o elemento seguinte pode vir com 'clear:both'


--- Imagens aleatórias para criação ---
    https://picsum.photos/200/300/
    200 - width
    300 - height


--- opacity ---
    Escala de 0 a 1
    
    opacity: 0.9


--- dropdown ---
    Aula 20


--- Especificidade ---
    Ordem de prioridade para estilos repetidos em diferentes tags.
    Ex.:
    Classes tem prioridade em relação a seletor simples
    .classe > tag
    .classe > tag

    Regra geral:
    #id
    tag.classe
    .classe
    tag


--- important ---
    Quebra a regra de especificidade acima
    
    Ex.:
    #minhadiv{background: black}
    div{background: green !important} - Essa linha será entendida


--- Efeito gradient ---
    background-image: linear-gradient(black, grey, white)
    background-image: linear-gradient(to left, black, grey, white)
    background-image: linear-gradient(to bottom right, black, grey, white)
    background-image: linear-gradient(60deg, black, grey, white) // graus

    background-image: radial-gradient(black, grey, white)
    background-image: radial-gradient(black 50%, grey 40%, white 10%)


--- text shadow --- (aula 24)
    text-shadow: tamanho pra direita tamanho para baixo quantidade opacidade cor
    text-shadow: 2px 4px 1px red

    É possível fazer mais de uma sombra para a mesma tag, basta fazer virgula ao final e definir a próxima
    text-shadow: 2px 4px 1px red, 1px 1px 0px yellow


--- box shadow --- (aula 24)
    box-shadow: tamanho pra direita tamanho para baixo quantidade opacidade cor
    box-shadow: 2px 4px 1px red

    Exemplo de sombra bastante usado
    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)


--- Efeitos de texto ---
    Para textos que não cabem no elemento
    Exemplos aula 25


--- Media Queries
    Responsividade da tela de acordo com os diferentes tamanhos de tela existente
    @media only screen and (max-width: 600px) {...} // Apenas valor minimo
    @media screen and (max-width: 600px) and (min-width:900px){...} // Valor entre um e outro

    /* Smartphones (600px para baixo) */
    @media only screen and (max-width: 600px) {...}

    /* Dispositivos um pouco maiores, mas ainda pequenos (Pequenos Tablets e Smartphones + largos, 600px para cima) */
    @media only screen and (min-width: 600px) {...}

    /*Dispostivos Médios (Tablets deitados, 768px para cima) */
    @media only screen and (min-width: 768px) {...}

    /* Dispostivos Largos (laptops/desktops, 992px para cima) */
    @media only screen and (min-width: 992px) {...}

    /* Super Largos (Telas maiores laptops, desktops e até TVs, 1200px para cima) */
    @media only screen and (min-width: 1200px) {...}


--- flexbox ---
    É um tipo de display

    display: flex;
    flex-direction: column | row;
    flex-direction: column-reverse | row-reverse;
    flex-wrap: nowrap(default) | wrap

    flex-flow: row wrap; (comando com atalho para os de cima)

    - para organizar os elementos dentro do pai em questão horizontal
    justify-content: flex-start | flex-end | space-between | space-around | ...;

    - para organizar os elementos dentro do pai em questão vertical
    allign-items: flex-start | flex-end | space-between | space-around | ...;

    - para organizar todo o conteúdo
    allign-content: flex-start | flex-end | ...;

    - para fazer que todas as tags filhas cresçam uniformemente conforme a tag pai | utilizar na tag filha
    flex-grow: 1;


--- Alterar cor do elemento ---
    .classe:hover{
        background: color;
    }


--- Tirar o sublinhado de botões de links ---
    text-decoration: none;